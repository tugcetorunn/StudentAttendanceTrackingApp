// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentAttendanceTrackingApp.Data;

#nullable disable

namespace StudentAttendanceTrackingApp.Data.Migrations
{
    [DbContext(typeof(SATDbContext))]
    [Migration("20240822192402_alldata")]
    partial class alldata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentAttendanceTrackingApp.Data.Entities.ApiUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApiUsers", "satapp");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Company = "Tech Solutions",
                            CreaDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe",
                            Password = "password123",
                            Phone = "+1234567890",
                            UserName = "jdoe"
                        },
                        new
                        {
                            Id = 2,
                            Company = "Innovatech",
                            CreaDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "alicesmith@example.com",
                            FirstName = "Alice",
                            IsDeleted = false,
                            LastName = "Smith",
                            Password = "securepass456",
                            Phone = "+0987654321",
                            UserName = "asmith"
                        },
                        new
                        {
                            Id = 3,
                            Company = "Future Tech",
                            CreaDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "bobmiller@example.com",
                            FirstName = "Bob",
                            IsDeleted = false,
                            LastName = "Miller",
                            Password = "mypassword789",
                            Phone = "+1122334455",
                            UserName = "bmiller"
                        },
                        new
                        {
                            Id = 4,
                            Company = "Tech Innovators",
                            CreaDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "charliejohnson@example.com",
                            FirstName = "Charlie",
                            IsDeleted = false,
                            LastName = "Johnson",
                            Password = "pass1234",
                            Phone = "+6677889900",
                            UserName = "cjohnson"
                        },
                        new
                        {
                            Id = 5,
                            Company = "NextGen Tech",
                            CreaDate = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "dianadavis@example.com",
                            FirstName = "Diana",
                            IsDeleted = false,
                            LastName = "Davis",
                            Password = "password321",
                            Phone = "+4455667788",
                            UserName = "ddavis"
                        });
                });

            modelBuilder.Entity("StudentAttendanceTrackingApp.Data.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Lesson", "satapp");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Matematik"
                        },
                        new
                        {
                            Id = 2,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Fizik"
                        },
                        new
                        {
                            Id = 3,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Kimya"
                        },
                        new
                        {
                            Id = 4,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Biyoloji"
                        },
                        new
                        {
                            Id = 5,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tarih"
                        },
                        new
                        {
                            Id = 6,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Coğrafya"
                        },
                        new
                        {
                            Id = 7,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "İngilizce"
                        },
                        new
                        {
                            Id = 8,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Edebiyat"
                        },
                        new
                        {
                            Id = 9,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bilgisayar Bilimleri"
                        },
                        new
                        {
                            Id = 10,
                            CreaDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Beden Eğitimi"
                        });
                });

            modelBuilder.Entity("StudentAttendanceTrackingApp.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Students", "satapp");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Istanbul",
                            CreaDate = new DateTime(2024, 8, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.yilmaz@hotmail.com",
                            FirstName = "Ali",
                            IsDeleted = false,
                            LastName = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2001, 3, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Ankara",
                            CreaDate = new DateTime(2024, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.kaya@hotmail.com",
                            FirstName = "Ayşe",
                            IsDeleted = false,
                            LastName = "Kaya"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1999, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Izmir",
                            CreaDate = new DateTime(2024, 8, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.demir@hotmail.com",
                            FirstName = "Mehmet",
                            IsDeleted = false,
                            LastName = "Demir"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2002, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Bursa",
                            CreaDate = new DateTime(2024, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.celik@hotmail.com",
                            FirstName = "Fatma",
                            IsDeleted = false,
                            LastName = "Çelik"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2000, 8, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Antalya",
                            CreaDate = new DateTime(2024, 8, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ahmet.yildiz@hotmail.com",
                            FirstName = "Ahmet",
                            IsDeleted = false,
                            LastName = "Yıldız"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2003, 7, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Adana",
                            CreaDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "elif.arslan@hotmail.com",
                            FirstName = "Elif",
                            IsDeleted = false,
                            LastName = "Arslan"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1998, 9, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Konya",
                            CreaDate = new DateTime(2024, 8, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.koc@hotmail.com",
                            FirstName = "Murat",
                            IsDeleted = false,
                            LastName = "Koç"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2001, 12, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Samsun",
                            CreaDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "zeynep.aydin@hotmail.com",
                            FirstName = "Zeynep",
                            IsDeleted = false,
                            LastName = "Aydın"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1997, 6, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Kayseri",
                            CreaDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hasan.ozturk@hotmail.com",
                            FirstName = "Hasan",
                            IsDeleted = false,
                            LastName = "Öztürk"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2004, 4, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Eskişehir",
                            CreaDate = new DateTime(2024, 8, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emine.cakir@hotmail.com",
                            FirstName = "Emine",
                            IsDeleted = false,
                            LastName = "Çakır"
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2002, 2, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Trabzon",
                            CreaDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "berk.polat@hotmail.com",
                            FirstName = "Berk",
                            IsDeleted = false,
                            LastName = "Polat"
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2000, 10, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Mersin",
                            CreaDate = new DateTime(2024, 8, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deniz.sahin@hotmail.com",
                            FirstName = "Deniz",
                            IsDeleted = false,
                            LastName = "Şahin"
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2001, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Gaziantep",
                            CreaDate = new DateTime(2024, 8, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "seda.kurt@hotmail.com",
                            FirstName = "Seda",
                            IsDeleted = false,
                            LastName = "Kurt"
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(1999, 11, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Şanlıurfa",
                            CreaDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.erdogan@hotmail.com",
                            FirstName = "Merve",
                            IsDeleted = false,
                            LastName = "Erdoğan"
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2003, 5, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            City = "Diyarbakır",
                            CreaDate = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.bozkurt@hotmail.com",
                            FirstName = "Hüseyin",
                            IsDeleted = false,
                            LastName = "Bozkurt"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
